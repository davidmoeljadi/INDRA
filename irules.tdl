;;; -*- Mode: TDL; Coding: utf-8 -*-
;;; Inflecting Lexical Rule Instances
;;; 120815: change "the_q_rel" to "def_q_rel"
;nya-suffix-1 :=
;%suffix (* nya)
;nya-lex-rule & 
; [ DTR.SYNSEM.LOCAL [ CONT.HOOK [ INDEX #index,
;				  LTOP #larg ] ],
;   C-CONT [ HOOK [ INDEX #index,
;		   LTOP #ltop ],
;	    HCONS <! qeq & [ HARG #harg,
;			     LARG #larg ] !>,
;	    RELS <! quant-relation & [ PRED def_q_rel,
;				       LBL #ltop,
;				       ARG0 #index,
;				       RSTR #harg ] !> ] ].
#|
nya-suffix-1 :=
%suffix (* nya)
nya-lex-rule & 
 [ DTR.SYNSEM.LOCAL [ CAT.HEAD nounnyadef,
                      CONT.HOOK [ INDEX #index,
				  LTOP #larg ] ],
   C-CONT [ HOOK [ INDEX #index ],
	    HCONS <! qeq & [ HARG #harg,
			     LARG #larg ] !>,
	    RELS <! quant-relation & [ PRED def_q_rel,
				       ARG0 #index,
				       RSTR #harg ] !> ] ].

nya-suffix-2 :=
%suffix (* nya)
nya-lex-rule & 
 [ DTR.SYNSEM.LOCAL [ CAT.HEAD nounnyapos,
                      CONT.HOOK [ INDEX #index,
				  LTOP #larg ] ],
   C-CONT [ HOOK [ INDEX #index ],
	    HCONS <! qeq & [ HARG #harg,
			     LARG #larg ],
		   qeq & [ HARG #harg2,
			   LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED def_q_rel,
				       ARG0 #index,
				       RSTR #harg ],
		    arg12-relation & [ PRED poss_rel,
				       LBL #larg,
				       ARG0 event,
				       ARG1 #index,
				       ARG2 #arg2 & [ PNG.PERNUM 3sg ] ],
		    quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #arg2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #arg2 ] !> ] ].

ku-suffix-1 :=
%suffix (* ku)
ku-lex-rule & 
 [ DTR.SYNSEM.LOCAL [ CONT.HOOK [ INDEX #index,
				  LTOP #larg ] ],
   C-CONT [ HOOK [ INDEX #index ],
	    HCONS <! qeq & [ HARG #harg,
			     LARG #larg ],
		   qeq & [ HARG #harg2,
			   LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED def_q_rel,
				       ARG0 #index,
				       RSTR #harg ],
		    arg12-relation & [ PRED poss_rel,
				       LBL #larg,
				       ARG0 event,
				       ARG1 #index,
				       ARG2 #arg2 & [ PNG.PERNUM 1sg ] ],
		    quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #arg2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #arg2 ] !> ] ].

mu-suffix-1 :=
%suffix (* mu)
mu-lex-rule & 
 [ DTR.SYNSEM.LOCAL [ CONT.HOOK [ INDEX #index,
				  LTOP #larg ] ],
   C-CONT [ HOOK [ INDEX #index ],
	    HCONS <! qeq & [ HARG #harg,
			     LARG #larg ],
		   qeq & [ HARG #harg2,
			   LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED def_q_rel,
				       ARG0 #index,
				       RSTR #harg ],
		    arg12-relation & [ PRED poss_rel,
				       LBL #larg,
				       ARG0 event,
				       ARG1 #index,
				       ARG2 #arg2 & [ PNG.PERNUM 2sg ] ],
		    quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #arg2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #arg2 ] !> ] ].
|#

;;;active voice
; <type val="act-prefix">
; <description>Active voice with |me-| prefix
; <ex>menunggu
; <nex>
; <todo>
; </type>
act-prefix :=
%prefix (p mem) (pl mempl) (pr mempr) (ps memps) (pt mempt) (pertinggi mempertinggi) (punyai mempunyai) (b memb) (m mem) (f memf) (v memv) (w mew) (t men) (tr mentr) (ts ments) (d mend) (n men) (r mer) (s meny) (sl mensl) (sr mensr) (sp mensp) (sm mensm) (sn mensn) (sk mensk) (sy mensy) (syairkan menyairkan) (sw mensw) (st menst) (z menz) (l mel) (c menc) (j menj) (ny meny) (y mey) (k meng) (kh mengkh) (kl mengkl) (kr mengkr) (g mengg) (ng meng) (q mengq) (h mengh) (a menga) (i mengi) (u mengu) (e menge) (o mengo)
act-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ OPT -,
                                   LOCAL.CAT.HEAD comp-noun ] > ].

; <type val="act-prefix">
; <description>Active voice with |me-| prefix for ditransitives V NP NP
; <ex>memberi
; <nex>
; <todo>
; </type>
act-ditrans-n-n-prefix :=
%prefix (p mem) (pl mempl) (pr mempr) (ps memps) (pt mempt) (b memb) (m mem) (f memf) (v memv) (w mew) (t men) (tr mentr) (ts ments) (d mend) (n men) (r mer) (s meny) (sl mensl) (sr mensr) (sp mensp) (sm mensm) (sn mensn) (sk mensk) (sy mensy) (sw mensw) (st menst) (z menz) (l mel) (c menc) (j menj) (ny meny) (y mey) (k meng) (kh mengkh) (kl mengkl) (kr mengkr) (g mengg) (ng meng) (q mengq) (h mengh) (a menga) (i mengi) (u mengu) (e menge) (o mengo)
act-ditrans-n-n-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT -] > ].

; <type val="act-prefix">
; <description>Active voice with |me-| prefix for ditransitives V NP PP
; <ex>memasukkan
; <nex>
; <todo>
; </type>
act-ditrans-n-p-prefix :=
%prefix (p mem) (pl mempl) (pr mempr) (ps memps) (pt mempt) (b memb) (m mem) (f memf) (v memv) (w mew) (t men) (tr mentr) (ts ments) (d mend) (n men) (r mer) (s meny) (sl mensl) (sr mensr) (sp mensp) (sm mensm) (sn mensn) (sk mensk) (sy mensy) (sw mensw) (st menst) (z menz) (l mel) (c menc) (j menj) (ny meny) (y mey) (k meng) (kh mengkh) (kl mengkl) (kr mengkr) (g mengg) (ng meng) (q mengq) (h mengh) (a menga) (i mengi) (u mengu) (e menge) (o mengo)
act-ditrans-n-p-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT +] > ].

;;;passive voice type one
pas-one-prefix :=
%prefix (* di)
pas-one-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT + ].

pas-one-ditrans-n-n-prefix :=
%prefix (* di)
pas-one-ditrans-n-n-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT +], [OPT -] > ].

pas-one-ditrans-n-p-prefix :=
%prefix (* di)
pas-one-ditrans-n-p-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT +], [OPT +] > ].

;;;passive voice type one with oleh
pas-oleh-prefix :=
%prefix (* di)
pas-oleh-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

pas-oleh-ditrans-n-p-prefix :=
%prefix (* di)
pas-oleh-ditrans-n-p-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT +] > ].

;;;passive voice type two
;; DVM 2017-12-20: maybe add pas-two-1agent-prefix and pas-two-2agent-prefix
pas-two-no-prefix :=
pas-two-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

pas-two-ditrans-n-n-no-prefix :=
pas-two-ditrans-n-n-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT -] > ].

pas-two-ditrans-n-p-no-prefix :=
pas-two-ditrans-n-p-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT -] > ].

;;;passive voice type two with prefix ku- and kau-
;pas-two-prefix-ku :=
;%prefix (* ku)
;pas-two-prefix-ku-lex-rule &
;  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

#|
pas-two-prefix-ku :=
%prefix (* ku)
pas-two-ku-rule &
 [ DTR.SYNSEM [ LOCAL [ CAT.HEAD passive-ku,
                        CONT.HOOK [ INDEX #index,
				    LTOP #larg ] ],
                LKEYS.KEYREL.ARG1 #ind2 ],
   C-CONT [ HOOK [ LTOP #larg,
                   INDEX #index ],
	    HCONS <! qeq & [ HARG #harg2,
			     LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #ind2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #ind2 & [ PNG.PERNUM 1sg ] ] !> ] ].
|#

pas-two-prefix-ku :=
%prefix (* ku)
pas-two-ku-rule &
 [ DTR.SYNSEM [ LOCAL [ CAT [ HEAD passive-ku,
                              VAL [ SUBJ < [ LOCAL [ CAT [ HEAD subj-noun,
                                                           VAL [ SPR < >,
                                                                 COMPS < > ] ],
                                                     CONT.HOOK.INDEX ref-ind & #ind1 ] ] >,
 			            COMPS < > ] ],
                        CONT.HOOK [ INDEX #index,
				    LTOP #larg ] ],
                LKEYS.KEYREL [ ARG1 #ind2,
                               ARG2 #ind1 ] ],
   C-CONT [ HOOK [ LTOP #larg,
                   INDEX #index ],
	    HCONS <! qeq & [ HARG #harg2,
			     LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #ind2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #ind2 & [ PNG.PERNUM 1sg ] ] !> ] ].

pas-two-prefix-kau :=
%prefix (* kau)
pas-two-ku-rule &
 [ DTR.SYNSEM [ LOCAL [ CAT [ HEAD passive-kau,
                              VAL [ SUBJ < [ LOCAL [ CAT [ HEAD subj-noun,
                                                           VAL [ SPR < >,
                                                                 COMPS < > ] ],
                                                     CONT.HOOK.INDEX ref-ind & #ind1 ] ] >,
 			            COMPS < > ] ],
                        CONT.HOOK [ INDEX #index,
				    LTOP #larg ] ],
                LKEYS.KEYREL [ ARG1 #ind2,
                               ARG2 #ind1 ] ],
   C-CONT [ HOOK [ LTOP #larg,
                   INDEX #index ],
	    HCONS <! qeq & [ HARG #harg2,
			     LARG #larg2 ] !>,
	    RELS <! quant-relation & [ PRED pronoun_q_rel,
				       ARG0 #ind2,
				       RSTR #harg2 ],
  		    arg0-relation & [ PRED pronoun_n_rel,
				      LBL #larg2,
				      ARG0 #ind2 & [ PNG.PERNUM 2sg ] ] !> ] ].


;pas-two-prefix-kau :=
;%prefix (* kau)
;pas-two-prefix-kau-lex-rule &
;  [ SYNSEM.LOCAL.CAT.VAL.COMPS.FIRST.OPT - ].

;pas-two-ditrans-n-n-prefix :=
;pas-two-ditrans-n-n-lex-rule &
;  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT -] > ].

;pas-two-ditrans-n-p-prefix :=
;pas-two-ditrans-n-p-lex-rule &
;  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [OPT -], [OPT -] > ].

;;;adjectives
;adj-superlative-prefix :=
;%prefix (* ter)
;adj-superlative-lex-rule.

;; DVM 2015-09-23: added reduplication rule for nouns with Francis
redup-noun-suffix :=
%suffix (* ²)
redup-noun-lex-rule.

;; DVM 2015-10-21: added reduplication rule for nouns with -an
;redup-noun-an-suffix :=
;%suffix (* ²an)
;redup-noun-an-lex-rule.

;; DVM 2015-10-21: added reduplication rule for adjectives for plural head nouns
redup-adj-suffix :=
%suffix (* ²)
redup-adj-lex-rule.

;; DVM 2015-10-21: added reduplication rule for adverbs
;redup-adv-suffix :=
;%suffix (* ²)
;redup-adv-lex-rule.

;; FCB & DVM 2016-02-10: rule for attributive adjective
adjective-attr-rule :=
adj-to-attr-rule.

;; DVM 2017-09-11: rule for attributive quantifier to N
adjective-attr-q-rule :=
adj-to-attr-quant-rule.

;; DVM 2017-09-11: rule for attributive adposition to N
adposition-attr-n-rule :=
adp-to-attr-n-rule.

;; DVM 2017-09-11: rule for attributive adposition to V
adposition-attr-v-rule :=
adp-to-attr-v-rule.
