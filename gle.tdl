;;; -*- Mode: tdl; Coding: utf-8; -*-

;;;
;;; Copyright (c) 2000 -- 2013 Dan Flickinger (danf@stanford.edu);
;;; copyright (c) 2009 -- 2013 Stephan Oepen (oe@ifi.uio.no); (ERG)
;;; Copyright (c) 2014 -- NTU Computational Linguistics Lab; (Zhong)
;;;     modified by Sanghoun Song (sanghoun@ntu.edu.sg, 2014-11-24) 
;;; see `LICENSE' for conditions.
;;;

;;;
;;; generic lexical entries, i.e. entries that are not activated directly by
;;; orthography.  all generic entries are distinguished from native lexical
;;; entries by virtue of their [ ONSET unk_onset ].  generics are sub-divided
;;; into two sub-classes, named (somewhat unfortunately) `unknown' generics 
;;; and `generic' generics (that is `unk' and `gen', respectively).
;;;
;;; the former are designed for unknown words and activated on the basis of
;;; PoS tags, the latter correspond to named entities that are recognized by
;;; string-level properties during chart mapping (the equivalent of what in
;;; the YY tradition used to be `ersatz' lexical entries).  see the comments
;;; in `tmr.tdl' (token mapping) and `lfr.tdl' (lexical filtering) for further
;;; background.
;;;
;;; _fix_me_
;;; i believe nothing stands in our way of giving these entries a `meaningful'
;;; orthography now, e.g. something like "_generic_trans_verb_bse_", or so, for
;;; interactive testing (including the LKB).
;;;
;;; furthermore, i suspect we can now ditch the older `gle' entries, used for
;;; generation only, and instead use some of the entries below (those with a
;;; singleton RELS list, fully instantiated PRED, and underspecified CARG) in
;;; *generic-lexical-entries*.                                 (22-jan-09; oe)
;;;


;;; SSH 2015-02-11: Generic Lexical Entries for INDRA
;;; The tagset used is Indonesian POS Tag. 
;;; The guideline is downloadable below.
;;; http://bahasa.cs.ui.ac.id/postag/downloads/Tagset.pdf

;;; There are 23 tags.
; CC 	coordinating conjunction			dan, tetapi, atau
; CD 	cardinal number					dua, juta, sepertiga, banyak, kedua, ribuan, 7916, 0,025
; DT 	determiner/article				para, sang, si
; FW 	foreign word					climate change
; IN 	preposition					dalam, dengan, di, ke, oleh, pada, untuk
; JJ 	adjective					bersih, nasional
; MD 	modal and auxiliary verb			boleh, sudah, perlu
; NEG 	negation					tidak, belum, jangan
; NN 	noun						monyet, bawah, sekarang, rupiah
; NNP 	proper noun					Indonesia, Januari, BBKP, Piala Dunia
; NND 	classifier, partitive, and measurement noun	orang, ton, helai, lembar
; OD 	ordinal number					pertama, ketiga, ke-4
; PR 	demonstrative pronoun 				ini, itu, sini, situ
; PRP 	personal pronoun				saya, kami, kita
; RB 	adverb						sangat, hanya, justru, niscaya, segera
; RP 	particle					pun, -lah, -kah
; SC 	subordinating conjunction/subordinator		sejak, jika, supaya, meski, maka, tanpa, dengan, bahwa, yang, lebih ... daripada ..., semoga
; SYM 	symbol 						IDR, +, %, @
; UH 	interjection					brengsek, oh, aduh, ayo, mari, hai
; VB 	verb 						merancang, mengatur, pergi, bekerja, tertidur
; WH	question					siapa, apa, mana, kenapa, kapan, di mana, bagaimana, berapa
; X	unknown						statemen
; Z	punctuation					"...", ?, .


generic_name-lex := proper-name-lex &
 [ SYNSEM.LKEYS.KEYREL.CARG #carg,
   STEM < "_generic_name_" >,
   TOKENS.+LIST generic_token_list &
			    < [ +POS.+TAGS < "NNP" >,
				+CARG #carg ] > ].

generic_card := a_-_num_le &
 [ SYNSEM.LKEYS.KEYREL.CARG #carg,
   STEM < "_generic_card_ne_" >,
   TOKENS.+LIST generic_token_list &
			    < [ +POS.+TAGS < "CD" >,
				+CARG #carg ] > ].


generic_nn := common-noun-lex & 
 [ SYNSEM.LKEYS.KEYREL.PRED #pred,
   STEM < "_generic_common_noun_" >,
   TOKENS.+LIST generic_token_list &
			    < [ +POS.+TAGS < "NN" >,
			        +PRED #pred ] > ].

generic_vv := opt-tr-verb-lex &
 [ SYNSEM.LKEYS.KEYREL.PRED #pred,
   STEM < "_generic_verb_" >,
   TOKENS.+LIST generic_token_list & 
			    < [ +POS.+TAGS < "VB" >,
				+PRED #pred ] > ].

; generic_adj := aj_-_i-unk_le &
;   [ ORTH < "_generic_jj_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJ" ] > ].

; generic_adverb := av_-_i-unk_le &
;   [ ORTH < "_generic_rb_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "RB" ] > ].

; DVM 2017-02-08: added from Zhong
; DVM 2017-02-21: changed "a_-_num_le" to "a_-_num-pl_le" for numbers >=2
generic_num_ne := a_-_num-pl_le & 
  [ SYNSEM.LKEYS.KEYREL.CARG #carg,
    STEM < "_generic_num_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS card_ne ] > ]. 

generic_year_ne := n_-_temp-lex & 
;;nonque-item &
  [ SYNSEM.LKEYS.KEYREL.CARG #carg,
    STEM < "_generic_year_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS year_ne ] > ]. 

;generic_month_ne := time-noun-lex & nonque-item &
;  [ SYNSEM.LKEYS.KEYREL [ PRED month_n_rel,
;                          CARG #carg ],
;    STEM < "_generic_month_ne_" >,
;    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
;					  +CARG #carg,
;					  +CLASS month_ne ] > ]. 

;generic_day_ne := time-noun-lex & nonque-item &
;  [ SYNSEM.LKEYS.KEYREL [ PRED day_n_rel,
;                          CARG #carg ],
;    STEM < "_generic_day_ne_" >,
;    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
;					  +CARG #carg,
;					  +CLASS day_ne ] > ]. 

generic_date_ne := n_-_temp-lex & 
;nonque-item &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_date_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS date_ne ] > ]. 

generic_time_noun_ne := n_-_temp-lex & 
;nonque-item &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_time_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS time_ne ] > ]. 

generic_email_noun_ne := proper-name-lex & 
;nonque-item &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_email_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS email_ne ] > ].

;;for numeral phrases like "五号", treating as proper noun temporarily
generic_meas_noun_ne := proper-name-lex & 
;nonque-item &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_meas_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS meas_ne ] > ].

;;DVM 2018-12-27: for fractions |51/100|
generic_fract_noun_ne := proper-name-lex &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_fract_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS frct_ne ] > ].

;;DVM 2018-12-27: for percents |51.10 %| , |70%| , |12,3%|
generic_percent_noun_ne := proper-name-lex &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_percent_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS percent_ne ] > ].

generic_rupiah_noun_ne := proper-name-lex &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_rupiah_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS rupiah_ne ] > ].

;;DVM 2017-02-08: now INDRA parses ABC12DE, 11-a, 22b as a proper name
;;see ne1.tdl
generic_proper_ne := proper-name-lex & 
;nonque-item &
  [ SYNSEM.LKEYS.KEYREL [ PRED named_rel,
                          CARG #carg ],
    STEM < "_generic_name_ne_" >,
    TOKENS.+LIST generic_token_list & < [ +POS.+TAGS null,
					  +CARG #carg,
					  +CLASS proper_ne ] > ].


; generic_trans_verb_bse := v_np*_bse-unk_le &
;   [ ORTH < "_generic_vb_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VB" ] > ].

; generic_trans_verb_pres3sg := v_np*_pr-3s-unk_le &
;   [ ORTH < "_generic_vbz_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBZ" ] > ].

; generic_trans_verb_presn3sg := v_np*_pr-n3s-unk_le &
;   [ ORTH < "_generic_vbp_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBP" ] > ].

; generic_trans_verb_past := v_np*_pa-unk_le &
;   [ ORTH < "_generic_vbd_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBD" ] > ].

; generic_trans_verb_prp := v_np*_prp-unk_le &
;   [ ORTH < "_generic_vbg_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBG" ] > ].

; generic_trans_verb_psp := v_np*_psp-unk_le &
;   [ ORTH < "_generic_vbn_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBN" ] > ].

; generic_trans_verb_pas := v_-_pas-unk_le &
;   [ ORTH < "_generic_vbn_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "VBN" ] > ].

; generic_mass_noun := n_-_mc-unk_le &
;   [ ORTH < "_generic_fw_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "FW" ] > ].

; generic_mass_count_noun := n_-_mc-unk_le &
;   [ ORTH < "_generic_nn_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NN" ] > ].

; generic_pl_noun := n_-_c-pl-unk_le &
;   [ ORTH < "_generic_nns_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNS" ] > ].

; genericname := n_-_pn-unk_le &
;   [ ORTH < "_generic_nnp_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNP" ] > ].

; genericname_pl := n_-_pn-pl-unk_le &
;   [ ORTH < "_generic_nnps_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "NNPS" ] > ].

; generic_adj := aj_-_i-unk_le &
;   [ ORTH < "_generic_jj_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJ" ] > ].

; generic_adj_compar := aj_-_i-cmp-unk_le &
;   [ ORTH < "_generic_jjr_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJR" ] > ].

; generic_adj_superl := aj_-_i-sup-unk_le &
;   [ ORTH < "_generic_jjs_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "JJS" ] > ].

; generic_number := aj_-_i-crd-unk_le &
;   [ ORTH < "_generic_cd_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "CD" ] > ].

; generic_adverb := av_-_i-unk_le &
;   [ ORTH < "_generic_rb_" >,
;     TOKENS.+LIST < [ +TNT.+TAGS.FIRST "RB" ] > ].

; generic_uh_disc_adv := av_-_dc-like-unk_le &
;  [ ORTH < "_generic_uh_" >,
;    TOKENS.+LIST < [ +TNT.+TAGS.FIRST "UH" ] > ].

; ;;;
; ;;; and the second group of `generic' named entities, activated by their +CLASS
; ;;; values, which get set in token mapping.  to avoid overlap with the unknown
; ;;; lexical entries, the token mapping rules make sure to `empty out' the PoS
; ;;; information whenever a named entity token is created.
; ;;;

; generic_proper_ne := n_-_pn-gen_le &
;   [ ORTH < "_generic_proper_ne_" >,
;     TOKENS.+LIST < [ +CLASS proper_ne ] > ].

; generic_pl_noun_ne := n_-_c-pl-gen_le &
;   [ ORTH < "_generic_plur_ne_" >,
;     TOKENS.+LIST < [ +CLASS plur_ne ] > ].

; generic_date_ne := n_-_day-crd-gen_le &
;   [ ORTH < "_generic_date_ne_" >,
;     TOKENS.+LIST < [ +CLASS date_ne ] > ].

; generic_dom_card_ne := n_-_pn-dom-gen_le & 
;   [ ORTH < "_generic_dom_card_ne_" >,
;     TOKENS.+LIST < [ +CLASS dom_card_ne ] > ].

; generic_dom_ord_ne := n_-_pn-dom-o-gen_le & 
;   [ ORTH < "_generic_dom_ord_ne_" >,
;     TOKENS.+LIST < [ +CLASS dom_ord_ne ] > ].

; generic_dom_euro_ne := n_-_pn-dom-e-gen_le & 
;   [ ORTH < "_generic_dom_euro_ne_" >,
;     TOKENS.+LIST < [ +CLASS dom_card_ne ] > ].

; generic_year_ne := n_-_pn-yoc-gen_le &
;   [ ORTH < "_generic_year_ne_" >,
;     TOKENS.+LIST < [ +CLASS year_ne ] > ].

; generic_meas_np_ne := n_-_meas-gen_le &
;   [ ORTH < "_generic_meas_np_ne_" >,
;     TOKENS.+LIST < [ +CLASS meas_ne ] > ].

; generic_meas_n_ne := n_-_meas-n-gen_le &
;   [ ORTH < "_generic_meas_noun_ne_" >,
;     TOKENS.+LIST < [ +CLASS meas_noun_ne ] > ].

; generic_time_noun_ne := n_np_pn-hour-gen_le &
;   [ ORTH < "_generic_time_ne_" >,
;     TOKENS.+LIST < [ +CLASS time_ne ] > ].

; generic_card_ne := aj_-_i-crd-gen_le &
;   [ ORTH < "_generic_card_ne_" >,
;     TOKENS.+LIST < [ +CLASS card_ne ] > ].

; generic_card_np_ne := aj_np_i-crd-gen_le &
;   [ ORTH < "_generic_card_ne_" >,
;     TOKENS.+LIST < [ +CLASS card_ne ] > ].

; generic_ord_ne := aj_-_i-ord-gen_le &
;   [ ORTH < "_generic_ord_ne_" >,
;     TOKENS.+LIST < [ +CLASS ord_ne ] > ].

; generic_fract_ne := aj_-_i-frct-gen_le &
;   [ ORTH < "_generic_fract_ne_" >,
;     TOKENS.+LIST < [ +CLASS frct_ne ] > ].

; generic_decimal_ne := aj_-_i-one-gen_le &
;   [ ORTH < "_generic_decimal_ne_" >,
;     TOKENS.+LIST < [ +CLASS decimal_ne ] > ].

; gen_generic_noun := n_-_mc-ns-g_le &
;  [ ORTH < "_gen_generic_noun_" >,
;    TOKENS.+LIST < [ +CLASS no_class ] > ].

; gen_generic_verb := v_np*_unk_le &
;  [ ORTH < "_gen_generic_verb_" >,
;    TOKENS.+LIST < [ +CLASS no_class ] > ].

